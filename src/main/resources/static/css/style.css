/* --- レイアウトの基本設定 --- */
.excel-container {
    width: 90%;
    max-width: 1600px;
    margin: 40px auto;
    border: 1px solid #ccc; 
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    background-color: #fff;
}

/* ラジオボタンは非表示にする */
.excel-container input[type="radio"] {
    display: none;
}

/* --- タブ（シート名）エリア --- */
.tabs {
    position: relative;
    /* PC表示: タブとログアウトボタンを横並びにする */
    display: flex; 
    padding-top: 10px;
    background-color: #e8e8e8;
    /* PC表示はラップしない */
    flex-wrap: nowrap; 
    /* 縦方向の揃え方を調整できるようにalign-items: flex-end;を設定 */
    align-items: flex-end;
}

/* --- タブラベルのスタイル --- */
.tab-label {
    padding: 8px 15px;
    cursor: pointer;
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    border-bottom: none; 
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    margin-right: 2px;
    z-index: 1; 
    font-size: 1.4rem;
    color: #333;
    transition: background-color 0.2s;
    /* ラベル自体も下揃えになるように調整 */
    align-self: flex-end;
    margin-bottom: -1px; /* tab-lineとの間に隙間ができないように調整 */
}

/* ホバー時のスタイル */
.tab-label:hover {
    background-color: #ddd;
}

/* --- 選択されているタブのスタイル --- */
#tab1:checked + .tab-label,
#tab2:checked + .tab-label,
#tab3:checked + .tab-label {
    background-color: #ffffff; 
    border-color: #ccc;
    z-index: 2; 
    font-weight: bold;
    margin-bottom: -1px;
}

/* タブ下のライン */
.tab-line {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: #ccc; 
    z-index: 0;
}

/* ----------------------------------------------------
   利用状況のテキスト（表示モード）に赤太字を適用
   ---------------------------------------------------- */
.status-red-bold {
    color: red !important; /* 文字色を赤に設定 */
    font-weight: bold;     /* 文字を太字に設定 */
}

/* ------------------------------------------- */
/* --- ログアウトボタンのスタイル (PC表示) --- */
/* ------------------------------------------- */
.tabs .logout-form {
    /* PC表示: 右端に寄せ、下揃えを維持 */
    margin-left: auto; 
    padding-right: 15px;
    display: flex; 
    height: 100%;
    z-index: 5;
    padding-bottom: 5px; /* タブの底辺と合わせるために調整 */
}

.tabs .logout-button {
    padding: 5px 12px;
    background-color: #dc3545; 
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    transition: background-color 0.2s;
    white-space: nowrap; 
}

.tabs .logout-button:hover {
    background-color: #c82333; 
}
/* ------------------------------------------- */

/* --- タブの内容（シート）エリア --- */
.tab-contents {
    flex-grow: 1; 
    padding: 20px;
    background-color: #ffffff;
    border-top: none; 
    display: flex; 
}

/* すべての内容をデフォルトで非表示 */
.content {
    display: none;
    flex-grow: 1; 
}

/* --- 選択されたラジオボタンに対応する内容を表示 --- */
#tab1:checked ~ .tab-contents #content1,
#tab2:checked ~ .tab-contents #content2,
#tab3:checked ~ .tab-contents #content3 {
    display: block;
}

/* ----------------------------------------------------
   ★★★ 修正箇所: h2と操作結果フィールドを横並びにするコンテナ ★★★
   ---------------------------------------------------- */
.content-header {
    display: flex;
    /* 修正: h2を左に、メッセージを右に寄せる */
    justify-content: space-between;
    align-items: center; /* 垂直方向の中央揃え */
    margin-bottom: 20px;
    flex-wrap: wrap; /* モバイル対応で折り返す */
}

/* --- 内容エリアの装飾 --- */
.content-header h2 {
    color: #0066cc;
    border-bottom: 2px solid #0066cc;
    padding-bottom: 5px;
    margin-top: 0;
    margin-bottom: 0; /* content-headerでマージンを制御するためリセット */
    flex-shrink: 0;
    margin-right: 20px; /* 結果フィールドとの間隔 */
    
    /* 修正: h2の幅を内容に合わせ、メッセージ枠が広がるのを助ける */
    width: fit-content; 
    white-space: nowrap;
}

/* --- 固定フィールド（操作結果）のスタイル --- */
.last-operation-result {
    padding: 8px 15px;
    border-radius: 4px;
    font-size: 1.3rem;
    font-weight: bold;
    white-space: normal;
    transition: all 0.3s ease;
	/* 修正: max-widthを100%に設定し、flex-growで幅を広げる */
	max-width: 100% !important; 
    
    /* PC表示での配置 */
    flex-shrink: 1;   /* 縮小を許可 */
    flex-grow: 1;     /* 残りのスペースを全て占有 */
    margin-top: 0; 
    
    /* ★修正箇所: メッセージのテキスト自体を右揃えにする */
    text-align: right;
}

/* 通知タイプ別の色 (common.jsのnotificationクラスと連携) */
.last-operation-result.notification-success {
    background-color: #e6ffe6; 
    color: #1e7e34;
    border: 1px solid #1e7e34;
}

.last-operation-result.notification-error {
    background-color: #ffe6e6; 
    color: #bd2130;
    border: 1px solid #bd2130;
}

.last-operation-result.notification-info {
    background-color: #e6f7ff; 
    color: #117a8b;
    border: 1px solid #117a8b;
}
/* ---------------------------------------------------- */


/* === Excel風テーブルのスタイル（PC表示） === */
.excel-table {
    width: 100%; 
    border-collapse: collapse; 
    font-family: Arial, sans-serif;
    font-size: 12px; 
    table-layout: fixed; 
}

/* ★PC表示でテーブル要素のデフォルト動作を保証（PC崩れ防止） */
.excel-table tr {
    display: table-row; /* PC表示では行として動作 */
}
.excel-table th, .excel-table td {
    display: table-cell; /* PC表示ではセルとして動作 */
    border: 1px solid #d4d4d4; 
    padding: 4px 6px; 
    text-align: left;
    vertical-align: top;
    line-height: 1.5; 
    white-space: normal; 
    word-wrap: break-word; 
}

/* ----------------------------------------------------
   駐車証No.と駐車位置のセル幅の調整（PC版）
   ---------------------------------------------------- */
.excel-table td.js-permit-number,
.excel-table td.js-permit-location {
    white-space: normal;    
    min-width: 50px;        
    max-width: none;        
    text-align: center;     
    overflow: hidden;       
}
/* <td>内の表示テキスト（span）の調整 */
.excel-table td.js-permit-number .permit-number-text,
.excel-table td.js-permit-location .permit-number-text {
    display: inline-block;
    padding: 0 5px; 
    white-space: normal; 
}

/* 編集可能な全てのTDセルを position: relative に設定 */
.excel-table td.js-permit-number,
.excel-table td.js-permit-location,
.excel-table td.js-parking-status,
.excel-table td.js-visit-situation,
.excel-table td.js-bus-status,
.excel-table td.js-vehicle-number-field,
.excel-table td.js-remarks-field,
.excel-table td.js-remarks-field-visit  {
    position: relative; 
    overflow: visible; 
}

/* 各列の幅を均等に設定し、100%に収める (table-layout: fixed; で機能) */
.excel-table th, .excel-table td {
    width: 7.14%; 
}

/* ヘッダー行のスタイル */
.excel-table th {
    background-color: #f0ffef; 
    color: #333;
    font-weight: bold;
    text-align: center;
}
.excel-table tr:nth-child(even) {
    background-color: #f9f9f9;
}
/* 特定の列のテキスト配置 */
.excel-table th:nth-child(1), .excel-table td:nth-child(1) { text-align: center; width: 4%; } /* 整理番号をさらに狭く */
.excel-table th:nth-child(2), .excel-table td:nth-child(2) { font-size: 12px; } /* 日時をさらに小さく */
.excel-table th:nth-child(9), .excel-table td:nth-child(9) { text-align: right; width: 4%; } 
.excel-table th:nth-child(10), .excel-table td:nth-child(10) { text-align: right; width: 4%; } 
.excel-table th:nth-child(11), .excel-table td:nth-child(11) { text-align: right; width: 4%; }
.excel-table th:nth-child(13), .excel-table td:nth-child(13) { font-size: 12px; } /* 日時をさらに小さく */

/* 🚀 [追加] 時刻表示のセル（5列目と7列目）を中央揃えで統一 */
.excel-table th:nth-child(5), .excel-table td:nth-child(5), /* 下車済バス出庫時刻 */
.excel-table th:nth-child(7), .excel-table td:nth-child(7) { /* 乗車済バス出庫時刻 */
    text-align: left; 
}

/* -------------------------------------------------------------------------------------- */
/* 💡 【PC表示】編集モードの表示/非表示制御 (is-editingクラスによる修正) */
/* -------------------------------------------------------------------------------------- */

/* --- 編集モードのコンテナ (PC: 絶対配置でドロップダウン) --- */
.edit-mode {
    /* JSで display: block を制御するため、display: none が必要に応じて追加される */
    display: block; 
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 10;
    background: #f8f9fa; 
    border: 1px solid #ccc;
    padding: 5px;
    white-space: nowrap;
    
    display: flex; 
    flex-direction: column;
    
    width: auto; 
    max-width: 100%;
    min-width: 0; 
    box-sizing: border-box; 
}

/* 駐車場利用状況 (HTML側で定義される編集モード) のスタイル */
.excel-table .edit-mode-select {
    position: absolute;
    top: 100%; 
    left: 0;
    z-index: 10; 
    background: #f8f9fa; 
    border: 1px solid #ccc; 
    padding: 5px; 
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); 
    white-space: nowrap;
    
    display: flex; 
    flex-direction: column;
    
    width: auto;
    max-width: 100%;
    min-width: 150px; 
    box-sizing: border-box;
    width: 100%; 
}

/* 🔴 PC表示の切り替えロジック (取消ボタン動作の修正) - #content3 に限定 */
/* 1. デフォルト (非編集モード): 編集モードを非表示にする */
#content3 .excel-table td:not(.is-editing) .edit-mode-select {
    display: none !important;
}

/* 2. 編集モード時: 編集モードを表示する */
#content3 .excel-table td.is-editing .edit-mode-select {
    display: flex !important; /* JSによる表示を強制 */
    position: absolute !important; /* 絶対配置を強制 */
    top: 100% !important; 
    left: 0 !important;
    z-index: 10 !important; 
    
    /* その他、既存のPCスタイルを再適用 */
    background: #f8f9fa; 
    border: 1px solid #ccc; 
    padding: 5px; 
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); 
    flex-direction: column;
    width: 100%;
}

/* 3. 重なり対策: 編集モード時は元の表示テキストを非表示にする */
#content3 .excel-table td.is-editing .view-mode-text {
    display: none !important;
}


/* 備考欄の編集フォームのスタイル (右寄せ展開に戻す) */
.remarks-edit-form {
    position: absolute;
    top: 100%;
    z-index: 10;
    background: #f8f9fa; 
    border: 1px solid #ccc;
    padding: 5px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); 
    
    display: flex;
    flex-direction: column; 
    
    width: 300px !important; 

    /* ★修正箇所: 右寄せ展開に戻す */
    right: 0 !important;
    left: auto !important; 

    box-sizing: border-box;
}


/* --- フォーム要素の共通スタイル --- */
.permit-select,
.situation-select,
.bus-status-select,
.parking-status-select { 
    width: 100%; 
    box-sizing: border-box; 
    font-size: 12px; 
    padding: 2px 0;
    margin: 0;
}

/* 更新ボタンのスタイル (元のセレクタ - JSで生成される場合) */
.update-button { 
    display: block; 
    margin-top: 5px; 
    margin-left: auto; 
    width: 100%; 
    box-sizing: border-box;
    text-align: center;
}

/* ----------------------------------------------------
   [修正] 編集モード内のボタンのスタイル (縦並びを強制)
   ---------------------------------------------------- */
.edit-mode button,
.edit-mode-select button,
.remarks-edit-form button {
    /* 💡 width: 100% を維持しつつ、Flexboxで縦並びを強制 */
    width: 100%; 
    float: none; /* floatを解除 */
    
    /* 縦並びのため横マージンをリセット */
    margin-left: 0 !important; 
    margin-right: 0 !important;
    
    /* 💡 縦の隙間を確保 */
    margin-top: 5px !important; 
    
    font-size: 11px;
    padding: 2px 5px;
    cursor: pointer;
    box-sizing: border-box;
    text-align: center;
    
    display: block; 
}

/* ========================================================== */
/* 車両ナンバーの縦並び強制セクション (PC版) */
/* ========================================================== */

/* 1. 親<td>のレイアウトモデルをブロックまたはデフォルトに戻し、Flex/Gridを無効化 */
.excel-table td.js-vehicle-number-field {
    text-align: left !important; 
}

/* 車両ナンバーのフォームの絶対配置と見た目 (縦並びを強制) */
.excel-table td .vehicle-number-edit-form { /* 💡 formクラス名を修正 */
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 10;
    background: #f8f9fa; 
    border: 1px solid #ccc;
    padding: 5px;
    
    width: auto;
    max-width: 100%;
    min-width: 200px;
    box-sizing: border-box;

    display: block !important; 
    white-space: normal; 
}

/* 車両ナンバー欄の入力フォームのスタイル設定 */
.excel-table td .vehicle-number-input {
    width: 100% !important; 
    display: block !important; 
    clear: both !important; 
    
    box-sizing: border-box; 
    border: 1px solid #ccc; 
    padding: 3px;
    font-size: 14px; 
    margin: 0 0 5px 0 !important; 
}

/* 車両ナンバーのボタン（更新・取消）のスタイル */
.excel-table td .vehicle-number-edit-form button {
    width: 100% !important; 
    display: block !important; 
    float: none !important; 
    clear: both !important; 
    
    margin-top: 5px !important; 
    box-sizing: border-box;
}
/* ========================================================== */


/* --- カスタムツールチップのスタイル --- */
.custom-tooltip {
    position: absolute;
    z-index: 1000; 
    padding: 5px 10px;
    background-color: #333; 
    color: #fff; 
    border: 1px solid #ffcc00; 
    border-radius: 4px;
    font-size: 14px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
    display: none;
    pointer-events: none; 
}

/* 備考欄のtextareaのスタイル */
.remarks-textarea {
    width: 300px !important; 
    height: 100px !important; 
    
    flex-shrink: 0; 
    
    box-sizing: border-box;
    padding: 3px;
    font-size: 12px;
    resize: vertical; 
    border: 1px solid #ccc; 
    margin-bottom: 5px; 
}

/* 備考欄（js-remarks-field）を100%幅に優先表示させる (PC版の維持) */
.excel-table td.js-remarks-field {
    width: 100% !important; 
    clear: both !important; 
}

/* 編集可能なセルであることを強調 (既存部分) */
.excel-table td.js-visit-situation,
.excel-table td.js-parking-status,
.excel-table td.js-bus-status {
    cursor: pointer; 
    text-align: center !important; 
}

/* 編集可能なセルにマウスが乗ったときの強調 */
.excel-table td.js-visit-situation:hover,
.excel-table td.js-parking-status:hover,
.excel-table td.js-bus-status:hover {
    background-color: #e6f7ff; 
    box-shadow: inset 0 0 0 1px #00aaff; 
}

.situation-text {
    color: red !important; 
    display: inline-block;
    padding-bottom: 2px; 
    font-weight: bold; 
    white-space: normal; 
}

/* 各タブのコンテンツエリアをスクロール可能にする */
.tab-content {
    overflow-x: auto; 
    -webkit-overflow-scrolling: touch;
    width: 100%;
}

/* ========================================================== */
/* 📢 ★★★ トースト通知スタイル (最終修正) ★★★ */
/* ========================================================== */

/* 💡 修正追加: コンテナを画面右上に固定する */
.notification-toast-container {
    position: fixed; /* 画面に固定 */
    top: 20px;       /* 画面上部から */
    right: 20px;     /* 画面右側から */
    z-index: 9999;   /* 他の要素の上に表示 */
    pointer-events: none; /* クリックを透過させる */
    display: block;
}

.notification-toast {
    /* コンテナ内の相対配置 */
    position: relative; 
    
    min-width: 280px;
    margin-bottom: 10px; /* 次のトーストとの間隔 */
    
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 5px;
    padding: 16px 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    font-weight: bold;
    font-size: 16px;
    
    /* 初期表示を非表示にする設定 */
    opacity: 0;
    transform: translateY(0);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out; 
    pointer-events: auto; /* トーストがクリック可能である状態に戻す */
}

/* 通知タイプ別の色 */
.toast-success {
    background-color: #28a745; /* 緑 */
    border: 1px solid #1e7e34;
}

.toast-error {
    background-color: #dc3545; /* 赤 */
    border: 1px solid #bd2130;
}

.toast-info {
    background-color: #17a2b8; /* 青 */
    border: 1px solid #117a8b;
}

/* common.js の showNotificationToast によって追加されるクラス */
.notification-toast.fade-out {
    opacity: 0;
    transform: translateY(-20px); /* 上にスライドアウト */
}
/* ========================================================== */


/* ========================================================== */
/* 📢 ★★★ セル単位のハイライト表示用スタイル (修正・追加) ★★★ */
/* ========================================================== */

/* 更新されたセルとIDセルに適用されるクラス */
.highlight-cell {
    /* 適用したいハイライトの色を設定 */
    background-color: #ffffe0 !important; /* 薄い黄色 */
    
    /* 枠線も目立たせる */
    border: 1px solid #ffd700 !important; 
    
    /* 変化を視覚的に分かりやすくするためのアニメーション設定 */
    transition: background-color 0.5s ease-out; 
}

/* ========================================================== */
/* 📱 モバイル表示 (768px未満) の設定 - 最終調整版 */
/* ========================================================== */
@media (max-width: 768px) {
	
    /* 1. 全体コンテナ、ヘッダー、trの調整 */
    .excel-container {
        height: auto; 
        width: 100%;
        margin: 0;
        border: none;
        box-shadow: none;
    }
    .excel-table thead {
        display: none; 
    }
    .excel-table tr {
        display: flex; /* 💡 trをFlexコンテナにする */
        flex-wrap: wrap; /* 💡 セルが溢れたら折り返す */
        
        border: 1px solid #ccc;
        margin-bottom: 10px;
        padding: 5px;
        background-color: transparent; 
        
        /* 🔴 レイアウト伸び解消のため、高さ制約を緩和 */
        overflow: visible !important; 
        height: auto !important; 
        min-height: 0 !important; /* 最小高さをリセット */
        align-items: flex-start; /* tdを上寄せに揃える */
    }
    
    /* ----------------------------------------------------
       ★★★ 修正箇所: モバイル時のcontent-header/last-operation-resultの調整 ★★★
       ---------------------------------------------------- */
    .content-header {
        flex-direction: column; /* 縦並びにする */
        align-items: flex-start;
        margin-bottom: 10px;
    }
    
    .content-header h2 {
        width: 100%;
        border-bottom: 2px solid #0066cc;
        margin-bottom: 10px;
        margin-right: 0;
    }

    .last-operation-result {
        width: 100%;
        margin-top: 5px;
        font-size: 1.1rem;
        white-space: normal; /* 折り返しを許可 */
        /* モバイルでも右寄せを維持 */
        text-align: right;
    }
    /* ---------------------------------------------------- */
    
    /* ------------------------------------------- */
    /* モバイル時のログアウトボタンの配置調整 (維持) */
    /* ------------------------------------------- */
    .tabs {
        padding: 10px 0 0 0; 
        flex-wrap: nowrap;
        align-items: flex-end;
    }
    
    .tabs .tab-label {
         padding: 6px 10px;
         font-size: 13px;
         margin-bottom: -1px;
    }
    
    .tabs .logout-form {
        margin-left: auto;
        order: initial; 
        width: auto; 
        padding: 0 10px 4px 5px; 
        display: flex;
        align-items: flex-end;
        border-top: none;
    }
    
    .tabs .logout-button {
        padding: 6px 12px;
        font-size: 13px;
    }
    /* ------------------------------------------- */
    
	/* 2. すべてのセル(td)の基本スタイル - Flexアイテムとして制御 */
	.excel-table td {
        display: block; 
        flex-grow: 0;
        flex-shrink: 0;
        flex-basis: calc(50% - 2px); 
        margin: 1px; 
        border: 1px solid #eee; 
        box-sizing: border-box; 
        padding: 5px; 
        
        /* 💡 【最終修正 1-A】すべての td の高さをコンテンツに制限する */
        align-self: flex-start !important; 
        min-height: auto !important; 
        height: auto !important;
        
        font-size: 14px;
        line-height: 1.4;
        background-color: transparent !important; 
        position: relative; 
	}
        
    /* 💡 編集モード時に表示テキストを非表示にする制御 (JS連携) - #content3 に限定 */
    #content3 .excel-table td.is-editing .situation-text,
    #content3 .excel-table td.js-bus-status.is-editing .view-mode-text {
        display: none !important;
    }

	/* 🔴 100%幅にしたいセル（備考欄） */
	.excel-table td.js-remarks-field,
    .excel-table td.js-remarks-field-visit {   /* 備考欄 */
        flex-basis: 100% !important; /* Flexboxで100%幅を確保 */
        margin-left: 0;
        margin-right: 0;
    }

    /* 🔴 駐車証No.と駐車位置のペアの幅を調整 */
    
    /* 駐車証No. (横並び開始) */
    .excel-table tr > td.js-permit-number {
        flex-basis: 49% !important; 
        min-width: 50px !important;
        margin-left: 0; 
        margin-right: 1px;
    }
    /* 駐車位置 (横並び終了) */
    .excel-table tr > td.js-permit-location {
        flex-basis: 49% !important; 
        min-width: 50px !important;
        margin-left: 1px;
        margin-right: auto; 
    }
    
	/* 🔴 セルの表示順序を order で制御 (維持) */
	/* ---------------------------------------------------- */
    /* 1. リストID (js-list-id-field) を最優先（先頭）に表示 */
    .excel-table td.js-list-id-field { 
        order: 1 !important; 
        flex-basis: 100% !important; 
        margin-left: 0 !important; 
    }

    /* 2. 更新日時 (js-update-time-field) を備考欄の直前に移動 (order: 98) */
    .excel-table td.js-update-time-field { 
        order: 98 !important; 
        flex-basis: 49% !important; 
        margin-right: 0 !important; 
    }

    /* ---------------------------------------------------- */
	/* 3. 来館予定日時（td:nth-child(2)）を2番目（IDの直後）に表示 */
	.excel-table tr > td:nth-child(2) { 
        order: 2 !important; 
        flex-basis: 100% !important; 
        margin-left: 0;
        margin-right: 0;
    }
    
	/* 4. td:nth-child(3) 以降の order を 3, 4, 5... と連番で振り直す (中略) */
	.excel-table tr > td:nth-child(3) { order: 3; }
	.excel-table tr > td:nth-child(4) { order: 4; }
	.excel-table tr > td:nth-child(5) { order: 5; }
	.excel-table tr > td:nth-child(6) { order: 6; }
	.excel-table tr > td:nth-child(7) { order: 7; }
	.excel-table tr > td:nth-child(8) { order: 8; }
    
	.excel-table td.js-permit-number { order: 9; } 
	.excel-table td.js-permit-location { order: 10; } 

	.excel-table tr > td:nth-child(9) { order: 9; }
	.excel-table tr > td:nth-child(10) { order: 10; }
    .excel-table tr > td:nth-child(11) { order: 11; }
    
    .excel-table tr > td:nth-child(12) { order: 12; }
    .excel-table tr > td:nth-child(13) { order: 13; }
    
	/* 備考欄は最後に表示 */
	.excel-table td.js-remarks-field,
	.excel-table td.js-remarks-field-visit { 
	    order: 99 !important; 
	    flex-basis: 100% !important; 
	} 
    
    /* 3. ヘッダー情報（ラベル）の表示 (維持) */
    .excel-table td::before {
        content: attr(data-label); 
        display: block; 
        font-weight: bold;
        color: #0066cc; 
        border-bottom: 1px solid #eee;
        margin-bottom: 2px;
        text-align: left !important;
    }
    
    /* 4. Flexboxのためfloatクリア関連はリセット (維持) */
    .excel-table tr::after {
        content: none !important; 
    }
    
    .excel-table td::after {
        content: none !important;
    }

    /* ----------------------------------------------------
       [最終修正 2] is-editing クラスによる編集モードの表示/非表示制御 - #content3 に限定
       ---------------------------------------------------- */

    /* 💡 デフォルト状態: is-editing クラスがない td 内の編集モードは完全に非表示 */
    #content3 .excel-table td:not(.is-editing) .edit-mode-select {
        display: none !important;
    }
    
    /* 💡 編集モード時: is-editing クラスがある td 内の編集モードを表示 */
    #content3 .excel-table td.is-editing .edit-mode-select {
        display: flex !important; 
        flex-direction: column !important;
        
        /* レイアウトの調整 */
        position: static !important; /* モバイルでは static を強制 */
        width: 100% !important;
        min-width: auto !important;
        padding: 5px !important;
        margin-bottom: 5px !important;
        background: transparent !important;
        border: none !important;
        box-shadow: none !important;
        
        /* 潜り込み対策の z-index は維持 */
        z-index: 1000 !important; 
    }

    /* ----------------------------------------------------
       [その他の編集フォームのモバイル対応]
       ---------------------------------------------------- */
    .excel-table .edit-mode,
    .excel-table .remarks-edit-form,
    .excel-table td .vehicle-number-edit-form { 
        position: static; 
        display: block; 
        width: 100%;
        min-width: auto;
    }

    /* 車両ナンバーのフォームの調整 (維持) */
    .excel-table td .vehicle-number-edit-form { 
        display: block !important; 
        width: 100%;
        padding: 0 !important;
    }
    
    /* 車両ナンバーのフォーム要素 (維持) */
    .excel-table td .vehicle-number-input {
        width: 100% !important; 
        display: block !important; 
        clear: both !important; 
        margin: 0 0 5px 0 !important; 
    }

    /* 車両ナンバーのボタン (維持) */
    .excel-table td .update-vehicle-button,
    .excel-table td .cancel-vehicle-button {
        padding: 4px 5px;
        font-size: 13px;
        width: 100% !important; 
        display: block !important; 
        clear: both !important; 
        float: none !important;
        margin-top: 5px !important;
    }
    
    .excel-table .edit-mode select,
    .excel-table .edit-mode-select select,
    .excel-table .remarks-edit-form textarea {
        width: 100%;
        box-sizing: border-box;
        margin-bottom: 5px;
    }

    /* 🔴 編集モード内のボタンの最終調整 */
    .excel-table .edit-mode button,
    .excel-table .edit-mode-select button,
    .excel-table .remarks-edit-form button {
        width: 100%;
        margin-top: 3px !important;
        margin-left: 0 !important;
        margin-bottom: 0 !important; 
        padding: 4px 5px !important; 
        
        /* ボタンに強制的な高さを設定し、セルを押し広げる力を増す (維持) */
        min-height: 30px !important; 
    }
    
    .excel-table .remarks-edit-form textarea {
        width: 100% !important; 
        height: 100px !important; 
        min-height: 80px !important; 
        box-sizing: border-box;
    }
    
    /* 🔴 データがない場合の代替メッセージ行のスタイル (維持) */
    .excel-table tr.no-data-row {
        display: none !important; 
    }
    .excel-table tr.no-data-row-mobile {
        display: flex !important; 
        align-items: center; 
        justify-content: center; 
        border: 1px solid #ccc;
        margin-bottom: 10px;
        height: 120px; 
        padding: 0;
        overflow: visible !important; 
    }
    .excel-table tr.no-data-row-mobile td {
        flex-basis: 100% !important; 
        float: none !important; 
        clear: both !important;
        text-align: center !important;
        color: #888;
        background-color: #f7f7f7 !important;
        padding: 10px 5px; 
        min-height: auto !important;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0;
    }
    
    /* モバイル表示時のセルハイライト */
    .excel-table td.highlight-cell {
        background-color: #ffffe0 !important;
        border: 1px solid #ffd700 !important;
    }
}

/* ========================================================== */
/* ログインフォームのレスポンシブスタイル (維持) */
/* ========================================================== */
body {
    margin: 0;
    padding: 0;
    background-color: #f4f4f4; 
    display: flex;
    justify-content: center; 
    align-items: center; 
    min-height: 100vh; 
}
.login-container { 
    width: 90%; 
    max-width: 400px; 
    margin: auto; 
    padding: 30px; 
    border: 1px solid #ccc; 
    border-radius: 8px; 
    background-color: white; 
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
}
.login-container h1 {
    text-align: center;
    margin-bottom: 25px;
    color: #333;
}
.form-group { 
    margin-bottom: 20px; 
}
label { 
    display: block; 
    margin-bottom: 5px; 
    font-weight: bold; 
}
input[type="text"], input[type="password"] { 
    width: 100%; 
    padding: 10px; 
    font-size: 16px; 
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box; 
}
.login-container button { 
    width: 100%; 
    padding: 12px; 
    background-color: #007bff; 
    color: white; 
    border: none; 
    cursor: pointer; 
    border-radius: 4px;
    font-size: 16px;
    transition: background-color 0.2s;
}
.login-container button:hover {
    background-color: #0056b3;
}
.error-message { 
    color: red; 
    margin-bottom: 15px; 
    text-align: center; 
    font-weight: bold; 
}